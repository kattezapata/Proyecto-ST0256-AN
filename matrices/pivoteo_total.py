# -*- coding: utf-8 -*-
"""Pivoteo_Total.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vyzHM0tY3RYbEFqqTTquHiua5VHgSHmh
"""

import numpy as np

N=len(A)
[m,r]=np.shape(A)
mayor=0
Mayorf=0
MayorC=0
for p in range (m-1):
  for k in range (p,m):
    if A[p,k]>mayor:
      mayor=A[p,k]
      MayorC=k
      MayorF=p
  auxi=A[MayorF]
  A[MayorF]=A[p]
  A[p]=auxi
  for l in range(p+1,N):
    auxi2=A[l,MayorC]
    A[l,MayorC]=A[l,p]
    A[l,p]=auxi2
  auxi3=B[MayorF]
  B[MayorF]=B[p]
  B[p]=auxi3
  for i in range(p,r):
    while A[p,p]==0:
      fila=p+1
      while A[fila,p]==0 and fila<=m:
        fila=fila+1
      if A[fila,p]==0:
        print('No es posible relizar Escalonamiento en la diagonal principal')
      else:
        for  c in range(1,r):
          aux=A[p,c]
          A[p,c] = A[fila,c]
          A[fila,c]=aux
        aux=B[p]
        B[p]=B[fila]
        B[fila]=aux
    M=A[i,p]/A[p,p]
    for j in range(m):
      A[i,j]=A[i,j]-M*A[p,j]

    B[i]=B[i]-M*B[p]
X=[]
z=B[i]
for i in range(N,0):
  for j in range(N,0):
    while A[i,i]!=A[i,j]:
      z=z+A[i,j]
  x=z/A[i,i]
  X.append(x)
print('A:')
print(A)
print('b:')
print(B)
print(X)

A=np.array([[3. , -0.1, -0.2],
              [0.1,  7  , -0.3],
              [0.3, -0.2, 10  ]])

B=np.array([7.85,-19.3,71.4])