# -*- coding: utf-8 -*-
"""Pivoteo_Total.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TQp9Z72uIMpZleXu0MbgK1_bTgm8iEjX
"""

import numpy as np
def Pivoteo_Total(A,B):
  [m,r]=np.shape(A)
  max=0
  max_f=0
  max_c=0
  for i in range(m-1):
    for j in range(i,m):
      if A[i,j]>max:
        max=A[i,j]
        max_c=j
        max_f=i
    aux=A[max_f]
    A[max_f]=A[i]
    A[i]=aux
    for k in range(i+1,len(A)):
      aux2=A[k,max_c]
      A[k,max_c]=A[k,i]
      A[k,i]=aux2
    aux3=B[max_f]
    B[max_f]=B[i]
    B[i]=aux3
    for l in range(i,r):
      while A[i,i]==0:
        f=i+1
        while A[f,i]==0 and f<=m:
          f=f+1
        if A[f,i]==0:
          print("No es posible escalonar en la diagonal principal")
        else:
          for s in range(1,r):
            aux4=A[i,s]
            A[i,s]=A[f,s]
            A[f,s]=aux4
          aux4=B[i]
          B[i]=B[f]
          B[f]=aux4
      M=A[l,i]/A[i,i]
      for c in range(m):
        A[l,c]=A[l,c]-M*A[i,c]
      B[l]=B[l]-M*B[i]
    
  X=[]
  z=B[l]
  for i in range(len(A),0):
    for j in range(len(A),0):
      while A[i,i]!=A[i,j]:
        z=z+A[i,j]
    x=z/A[i,i]
    X.append(x)
  print(X)
  print('A:')
  print(A)
  print('b:')
  print(B)
          


A=np.array([[3. , -0.1, -0.2],
              [0.1,  7  , -0.3],
              [0.3, -0.2, 10  ]])

B=np.array([7.85,-19.3,71.4])

Pivoteo_Total(A,B)